@* 2. Create Components/Pages/Login.razor *@
@page "/login"
@using SurveyAggregatorApp.Services
@using SurveyAggregatorApp.Models
@inject UserService UserService
@inject StateContainer StateContainer
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Login - Survey Hub</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Login to Survey Hub</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }

                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Login
                            </button>
                        </div>
                    </EditForm>

                    <hr>
                    <div class="text-center">
                        <small class="text-muted">Demo credentials: user@example.com (any password)</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    protected override void OnInitialized()
    {
        if (StateContainer.CurrentUser != null)
        {
            Navigation.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var user = await UserService.LoginAsync(loginModel.Email, loginModel.Password);
            if (user != null)
            {
                StateContainer.SetUser(user);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login.";
        }
        finally
        {
            isLoading = false;
        }
    }
}
